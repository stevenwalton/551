-- MySQL Script generated by MySQL Workbench
-- Wed 11 Dec 2019 08:15:51 PM PST
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema climbing
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema climbing
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `climbing` DEFAULT CHARACTER SET utf8 ;
-- -----------------------------------------------------
-- Schema new_schema1
-- -----------------------------------------------------
USE `climbing` ;

-- -----------------------------------------------------
-- Table `climbing`.`country`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `climbing`.`country` ;

CREATE TABLE IF NOT EXISTS `climbing`.`country` (
  `idCountry` TINYINT(4) NOT NULL,
  `hemisphere` TINYINT(4) NULL,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`idCountry`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `climbing`.`state`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `climbing`.`state` ;

CREATE TABLE IF NOT EXISTS `climbing`.`state` (
  `idState` TINYINT(4) NOT NULL,
  `idCountry` TINYINT(4) NOT NULL,
  `name` VARCHAR(2) NULL,
  PRIMARY KEY (`idState`),
  INDEX `fk_State_1_idx` (`idCountry` ASC),
  CONSTRAINT `fk_State_1`
    FOREIGN KEY (`idCountry`)
    REFERENCES `climbing`.`country` (`idCountry`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `climbing`.`site`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `climbing`.`site` ;

CREATE TABLE IF NOT EXISTS `climbing`.`site` (
  `idSite` SMALLINT NOT NULL,
  `idState` TINYINT(4) NOT NULL,
  `name` VARCHAR(255) NULL,
  PRIMARY KEY (`idSite`),
  INDEX `fk_State_idx` (`idState` ASC),
  CONSTRAINT `fk_State`
    FOREIGN KEY (`idState`)
    REFERENCES `climbing`.`state` (`idState`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `climbing`.`area`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `climbing`.`area` ;

CREATE TABLE IF NOT EXISTS `climbing`.`area` (
  `idArea` INT NOT NULL,
  `idSite` SMALLINT NOT NULL,
  `name` VARCHAR(255) NULL,
  PRIMARY KEY (`idArea`),
  INDEX `fk_Site_idx` (`idSite` ASC),
  CONSTRAINT `fk_Site`
    FOREIGN KEY (`idSite`)
    REFERENCES `climbing`.`site` (`idSite`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `climbing`.`route`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `climbing`.`route` ;

CREATE TABLE IF NOT EXISTS `climbing`.`route` (
  `idRoute` INT NOT NULL,
  `type` VARCHAR(45) NULL,
  `numPitches` TINYINT(4) NULL,
  `approach` VARCHAR(255) NULL,
  `description` VARCHAR(255) NULL,
  `name` VARCHAR(255) NULL,
  `idSite` SMALLINT NOT NULL,
  `idArea` INT NOT NULL,
  `difficulty` FLOAT(4,2) NULL,
  `likability` INT NULL,
  `likeVotes` SMALLINT NOT NULL,
  `diffVotes` SMALLINT NOT NULL,
  PRIMARY KEY (`idRoute`),
  INDEX `fk_Route_Area1_idx` (`idArea` ASC),
  INDEX `fk_Route_Site_idx` (`idSite` ASC),
  CONSTRAINT `fk_Route_Area1`
    FOREIGN KEY (`idArea`)
    REFERENCES `climbing`.`area` (`idArea`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Route_Site`
    FOREIGN KEY (`idSite`)
    REFERENCES `climbing`.`site` (`idSite`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `climbing`.`pitch`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `climbing`.`pitch` ;

CREATE TABLE IF NOT EXISTS `climbing`.`pitch` (
  `idPitch` INT NOT NULL,
  `idRoute` INT NOT NULL,
  `length` TINYINT(4) NULL,
  `difficulty` FLOAT(4,2) NULL,
  `rating` TINYINT(4) NULL,
  `pitchNum` TINYINT(4) NULL,
  PRIMARY KEY (`idPitch`),
  INDEX `fk_Route_idx` (`idRoute` ASC),
  CONSTRAINT `fk_Route`
    FOREIGN KEY (`idRoute`)
    REFERENCES `climbing`.`route` (`idRoute`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `climbing`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `climbing`.`users` ;

CREATE TABLE IF NOT EXISTS `climbing`.`users` (
  `idUsers` INT NOT NULL,
  `name` VARCHAR(255) NULL,
  `bib` VARCHAR(255) NULL,
  PRIMARY KEY (`idUsers`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `climbing`.`completed`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `climbing`.`completed` ;

CREATE TABLE IF NOT EXISTS `climbing`.`completed` (
  `Route_idRoute` INT NOT NULL,
  `Users_idUsers` INT NOT NULL,
  PRIMARY KEY (`Route_idRoute`, `Users_idUsers`),
  INDEX `fk_Route_has_Users_Users1_idx` (`Users_idUsers` ASC),
  INDEX `fk_Route_has_Users_Route1_idx` (`Route_idRoute` ASC),
  CONSTRAINT `fk_Route_has_Users_Route1`
    FOREIGN KEY (`Route_idRoute`)
    REFERENCES `climbing`.`route` (`idRoute`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Route_has_Users_Users1`
    FOREIGN KEY (`Users_idUsers`)
    REFERENCES `climbing`.`users` (`idUsers`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `climbing`.`route_has_pitch`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `climbing`.`route_has_pitch` ;

CREATE TABLE IF NOT EXISTS `climbing`.`route_has_pitch` (
  `Pitch_idPitch` INT NOT NULL,
  `Route_idRoute` INT NOT NULL,
  PRIMARY KEY (`Pitch_idPitch`, `Route_idRoute`),
  INDEX `fk_Pitch_has_Route_Route1_idx` (`Route_idRoute` ASC),
  INDEX `fk_Pitch_has_Route_Pitch1_idx` (`Pitch_idPitch` ASC),
  CONSTRAINT `fk_Pitch_has_Route_Pitch1`
    FOREIGN KEY (`Pitch_idPitch`)
    REFERENCES `climbing`.`pitch` (`idPitch`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Pitch_has_Route_Route1`
    FOREIGN KEY (`Route_idRoute`)
    REFERENCES `climbing`.`route` (`idRoute`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `climbing`.`pictures`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `climbing`.`pictures` ;

CREATE TABLE IF NOT EXISTS `climbing`.`pictures` (
  `idPictures` INT NOT NULL,
  `pictureURL` VARCHAR(255) NULL,
  `uploadedBy` INT NULL,
  PRIMARY KEY (`idPictures`),
  INDEX `fk_UploadedBy_idx` (`uploadedBy` ASC),
  CONSTRAINT `fk_UploadedBy`
    FOREIGN KEY (`uploadedBy`)
    REFERENCES `climbing`.`users` (`idUsers`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `climbing`.`route_has_pictures`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `climbing`.`route_has_pictures` ;

CREATE TABLE IF NOT EXISTS `climbing`.`route_has_pictures` (
  `Route_idRoute` INT NOT NULL,
  `Pictures_idPictures` INT NOT NULL,
  PRIMARY KEY (`Route_idRoute`, `Pictures_idPictures`),
  INDEX `fk_Route_has_Pictures_Pictures1_idx` (`Pictures_idPictures` ASC),
  INDEX `fk_Route_has_Pictures_Route1_idx` (`Route_idRoute` ASC),
  CONSTRAINT `fk_Route_has_Pictures_Route1`
    FOREIGN KEY (`Route_idRoute`)
    REFERENCES `climbing`.`route` (`idRoute`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Route_has_Pictures_Pictures1`
    FOREIGN KEY (`Pictures_idPictures`)
    REFERENCES `climbing`.`pictures` (`idPictures`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
